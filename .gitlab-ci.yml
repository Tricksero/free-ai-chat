# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

<<<<<<< HEAD
image: python:3.9-bookworm
=======
image: python:3.11.4-bullseye
>>>>>>> django_webapp


stages:          # List of stages for jobs, and their order of execution
  - test


<<<<<<< HEAD
unit-test-gpt4all-job:   # This job runs in the test stage.
=======
unit-test-job:   # This job runs in the test stage.
>>>>>>> django_webapp
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - apt-get update && apt upgrade -y
<<<<<<< HEAD
    - apt install -y python3.11-venv
    - python3.11 -m venv venv
    - source venv/bin/activate
    - pip install invoke pip-tools
    - inv sync
    - python chat_api/test_gpt4all_api.py
    - echo "Code coverage is x%"
    - python chat_api/test_ollama_api.py
=======
    - python -m venv venv
    - source venv/bin/activate
    - pip install invoke pip-tools
    - inv sync
    - python chat_api/test.py
    - echo "Code coverage is x%"
>>>>>>> django_webapp

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code..."
    - apt-get update && apt upgrade -y
<<<<<<< HEAD
    - apt install -y python3.11-venv
    - python3.11 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install invoke pip-tools
    - inv sync
    - safety check
=======
    - python -m venv venv
    - source venv/bin/activate
    - pip install invoke pip-tools
    - inv sync
>>>>>>> django_webapp
    - mypy ./
    - pylint ./chat_api/
    - pylint ./tasks.py
    - echo "add lint for html and js."


